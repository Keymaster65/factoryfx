buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.6"
    }
}
ext.platform = "win"

apply plugin: 'idea'
idea {
    project {
        languageLevel = JavaVersion.VERSION_11
        targetBytecodeVersion = JavaVersion.VERSION_11
        vcs = 'Git'
    }
}

import org.gradle.api.tasks.wrapper.Wrapper.DistributionType
wrapper {
    gradleVersion = '5.0'
    distributionType = DistributionType.ALL
}



subprojects {
    apply plugin: 'java'
    apply plugin: "com.github.spotbugs"

    apply plugin: 'maven'
    apply plugin: 'signing'


    compileJava {
        inputs.property("moduleName", "de.factoryfx.$project.name")
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath,
            ]
            classpath = files()
        }
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    javadoc {
        failOnError = false
        doFirst {
            options.addStringOption('-module-path', classpath.asPath)
        }
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    group = 'io.github.factoryfx'
    version = '1.9.1'

    if (project.hasProperty('secretKeyRingFileSourceURL')) {
        signing {
            sign configurations.archives
        }
        //workaround  to get key  file to the plugin

        // task to fetch the GPG key to sign the JAR archives
        // we put the key to build/secring.gpg where it will be picked up by the uploadArchives task of the nexus plugin

        task fetchSecretKeyRingFile {
            doLast {
                def fileTarget = "build/secring.gpg"
                def secretKeyRingFileSourceURL = project.getProperty("secretKeyRingFileSourceURL")
                def secretKeyRingFileSourceURLAuthUsername = project.getProperty("secretKeyRingFileSourceURLAuthUsername")
                def secretKeyRingFileSourceURLAuthPassword = project.getProperty("secretKeyRingFileSourceURLAuthPassword")
                project.setProperty("signing.secretKeyRingFile", fileTarget)
                file(fileTarget).getParentFile().mkdirs()
                ant.get(src: secretKeyRingFileSourceURL, dest: fileTarget, username: secretKeyRingFileSourceURLAuthUsername, password: secretKeyRingFileSourceURLAuthPassword)
            }
        }
        afterEvaluate {
            // always fetch the GPG key before signing archives
            tasks.signArchives.dependsOn fetchSecretKeyRingFile
        }
    }


    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'factoryfx'
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'factoryfx dependency injection framework'
                    url 'http://factoryfx.github.io/factoryfx'

                    scm {
                        connection 'scm:git@github.com:factoryfx/factoryfx.git'
                        developerConnection 'scm:git@github.com:factoryfx/factoryfx.git'
                        url 'scm:git@github.com:factoryfx/factoryfx.git'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'hbrackmann'
                            name 'Henning Brackmann'
                        }
                    }
                }
            }
        }
    }


    repositories {
        mavenCentral()
    }

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    compileJava.options.encoding = 'UTF-8'

    dependencies {
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta2'
        compile (group: 'com.google.guava', name: 'guava', version: '26.0-jre'){
            exclude module: "jsr305" // module conflict: https://blog.codefx.org/java/jsr-305-java-9/, https://github.com/google/guava/issues/2960
        }
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.18.3'
    }

    spotbugs {
        sourceSets = [sourceSets.main]
//        toolVersion = "3.0.1"
        ignoreFailures = true
        excludeFilter = file("$rootProject.projectDir/findbugs/findbugs-exclude-filter.xml")
    }


    //that is the new publish plugin that doesn't work with maven central
    //https://github.com/gradle/gradle/issues/1165
    apply plugin: 'maven-publish'

    publishing {

        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar {
                    classifier "sources"
                }
            }
        }

        repositories {
            maven {
                // change to point to your repo, e.g. http://my.org/repo
                credentials {
                    username System.getProperty("repouser")
                    password System.getProperty("repopassword")
                }
                url System.getProperty("repourl")
            }
        }
    }
}

project(':copperBridge') {
    dependencies {
        compile project(":factory")
        compile("org.copper-engine:copper-coreengine:5.0.1")
        compile("org.copper-engine:copper-ext:5.0.1")
        compile group: 'org.ow2.asm', name: 'asm', version: '7.0'
        compile group: 'org.ow2.asm', name: 'asm-tree', version: '7.0'
        compile group: 'org.yaml', name: 'snakeyaml', version: '1.23'
    }
}

project(':microserviceRestServer') {
    dependencies {
        compile project(":jettyFactory")
        compile project(":microserviceRestCommon")
    }
}

project(':microserviceRestClient') {
    dependencies {
        compile project(":factory")
        compile project(":microserviceRestCommon")
        compile (group: 'org.glassfish.jersey.ext', name: 'jersey-proxy-client', version: '2.27') {
            exclude group: "javax.annotation"
        }
        compile ('org.glassfish.jersey.core:jersey-client:2.27') {
            exclude group: "javax.annotation"
        }
        compile (group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.9.6') {
            exclude group: "javax.annotation"
        }

//        compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    }

}

project(':microserviceRestCommon') {
    dependencies {
        compile project(":factory")
        compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1'
        compile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'


    }
}

project(':microserviceRestIntegrationTest') {
    uploadArchives.enabled = false
    dependencies {
        compile project(":microserviceRestServer")
        compile project(":microserviceRestClient")
        compile (group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'){
            exclude group: "javax.activation"
        }
        compile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
    }

    spotbugs {
        sourceSets = []
    }
}

project(':data') {
    dependencies {
        compile (group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6'){
            exclude group: "javax.annotation"
        }
        compile (group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.9.6'){
            exclude group: "javax.annotation"
        }
        compile (group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.6'){
            exclude group: "javax.annotation"
        }
    }
}

project(':factory') {
    dependencies {
        compile project(":data")
        testCompile project(":testfactories")
    }
}

project(':postgresqlStorage') {
    ext.moduleName = 'org.gradle.fairy.app'



    dependencies {
        compile project(":factory")
        compile group: 'org.postgresql', name: 'postgresql', version: '42.2.2'
        testCompile 'ru.yandex.qatools.embed:postgresql-embedded:1.15'
        testCompile project(":testfactories")
    }

}

project(':oracledbStorage') {
    dependencies {
        compile project(":factory")
        //still no oracle driver in mvn central
        testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'
        testCompile project(":testfactories")
    }

}

project(':jettyFactory') {
    dependencies {
        compile project(":factory")
        compile (group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.14.v20181114')  {
            exclude group: "javax.annotation"
        }
        compile (group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.14.v20181114')  {
            exclude group: "javax.annotation"
        }
        compile (group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.4.14.v20181114')  {
            exclude group: "javax.annotation"
        }


       // currently jaxb doesn't work with java 9:  https://github.com/javaee/jaxb-v2/pull/1152
//        compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
//        compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.0'
//        compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.0'

        //FIXME switch to normal release if ready, current release 2.3 jaxb doesn't work with java 9:  https://github.com/javaee/jaxb-v2/pull/1152
        compile (group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359') {
            exclude group: 'javax.activation'
            exclude group: "javax.annotation"
        }


        compile (group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.27') {
            exclude group: "javax.annotation"
        }
        compile (group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.9.6'){
            exclude group: "javax.annotation"
        }

        compile ('org.glassfish.jersey.containers:jersey-container-servlet-core:2.27') {
            exclude group: "javax.annotation"
        }
        compile ('org.glassfish.jersey.inject:jersey-hk2:2.27'){
            exclude group: 'javax.annotation'
        }

//        compile group: 'com.sun.xml.ws', name: 'jaxws-ri', version: '2.3.1', ext: 'pom'
        /*
        compile (group: 'javax.xml.ws', name: 'jaxws-api', version: '2.4.1-SNAPSHOT') {
            exclude group: 'javax.annotation'
        }
        */

        testCompile (group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'){
            exclude group: "javax.activation"
        }

//        compile group: 'org.apache.cxf', name: 'cxf-rt-bindings-soap', version: '3.2.4'
//        compile group: 'javax.xml.ws', name: 'jaxws-api', version: '2.3.0'
//        compile group: 'com.sun.activation', name: 'javax.activation', version: '1.2.0' // workaround for jersey-hk2

        compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'


    }

}


project(':example') {

    uploadArchives.enabled = false
    dependencies {
        compile project(":javafxFactoryEditing")
        compile project(":jettyFactory")
        compile project(":microserviceRestServer")
        compile project(":factory")

        compile (group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'){
            exclude group: "javax.activation"
        }
        compile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
    }

}


project(':javafxDataEditing') {
//    repositories {
//        maven {
//            url "https://oss.sonatype.org/content/repositories/snapshots/"
//        }
//    }

    dependencies {
        compile project(":data")

        compile "org.openjfx:javafx-base:11.0.1:$platform"
        compile "org.openjfx:javafx-graphics:11.0.1:$platform"
        compile "org.openjfx:javafx-controls:11.0.1:$platform"
        compile "org.openjfx:javafx-web:11.0.1:$platform"
        compile "org.openjfx:javafx-fxml:11.0.1:$platform"
        compile "org.openjfx:javafx-media:11:$platform"

        compile group: 'org.controlsfx', name: 'controlsfx', version: '9.0.0'
        compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.6.10'
        testCompile project(":testfactories")
        testCompile (group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'){
            exclude group: "javax.activation"
        }
        testCompile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
    }

}

project(':javafxFactoryEditing') {
    dependencies {
        compile project(":factory")
        compile project(":microserviceRestClient")
        compile project(":javafxDataEditing")

        testCompile project(":testfactories")
    }

}

project(':javafxDistributionServer') {
    dependencies {
        compile project(":jettyFactory")
        compile project(":factory")
        compile 'org.slf4j:slf4j-api:1.8.0-beta2'

        testCompile (group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'){
            exclude group: "javax.activation"
        }
        testCompile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
    }

}

project(':javafxDistributionClient') {

    dependencies {
        compile 'org.slf4j:slf4j-api:1.8.0-beta2'
        compile (group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6'){
            exclude group: "javax.annotation"
        }

        compile "org.openjfx:javafx-base:11.0.1:$platform"
        compile "org.openjfx:javafx-graphics:11.0.1:$platform"
        compile "org.openjfx:javafx-controls:11.0.1:$platform"
        compile "org.openjfx:javafx-web:11.0.1:$platform"
        compile "org.openjfx:javafx-fxml:11.0.1:$platform"


        compile (group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.27')  {
            exclude group: "javax.annotation"
        }
        compile (group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.9.6'){
            exclude group: "javax.annotation"
        }
        compile ('org.glassfish.jersey.media:jersey-media-json-jackson:2.27') {
            exclude group: "javax.annotation"
        }

//        compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

        compile ('org.glassfish.jersey.inject:jersey-hk2:2.27'){
            exclude group: 'javax.annotation'
        }
    }

}

project(':javascript') {

    dependencies {
        compile project(":factory")

        compile group: 'com.google.javascript', name: 'closure-compiler-unshaded', version: 'v20170218'
        compile (group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6'){
            exclude group: "javax.annotation"
        }

        compile "org.openjfx:javafx-base:11.0.1:$platform"
        compile "org.openjfx:javafx-graphics:11.0.1:$platform"

//        compile group: 'com.google.javascript', name: 'closure-compiler-main', version: 'v20180402', ext: 'pom'
//        compile group: 'com.google.javascript', name: 'closure-compiler-externs', version: 'v20180402'

        //fat jar workaround
////        compile files('libs/closure-compiler.jar')
//        compile name: 'closurecompiler'
//
//        //try to add all transitive dependencies for closure-compiler
//        compile group: 'args4j', name: 'args4j', version: '2.33'
//        compile group: 'com.google.errorprone', name: 'error_prone_annotations', version: '2.0.18'
//        compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.1'
//        compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
//        compile group: 'com.google.jsinterop', name: 'jsinterop-annotations', version: '1.0.0'
    }
}

project(':javascriptDataEditing') {
    dependencies {
        compile project(":javascript")
        compile project(":javafxDataEditing")
    }
}

project(':testfactories') {
    uploadArchives.enabled = false
    dependencies {
        compile project(":factory")
    }
}

project(':docu') {
    uploadArchives.enabled = false
    dependencies {
        compile project(":factory")
        compile project(":jettyFactory")
        compile project(':postgresqlStorage')

        compile project(':microserviceRestServer');
        compile project(':microserviceRestClient');
        
        compile group: 'io.dropwizard.metrics', name: 'metrics-jetty9', version: '3.2.4'
        compile 'ru.yandex.qatools.embed:postgresql-embedded:1.15'
        compile (group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'){
            exclude group: "javax.activation"
        }
        compile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'

        compile (group: 'io.swagger', name: 'swagger-jersey2-jaxrs', version: '1.5.21'){
            exclude group: 'com.fasterxml.jackson.core'
            exclude group: 'com.google.guava'
        }
        compile (group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.4.0-b180830.0438') {
            exclude group: 'javax.annotation'
            exclude group: 'javax.activation'
        }
        
//        compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.21'
    }

}

project(':nanoservice') {
    dependencies {
        compile project(":factory")

    }
}

project(':typescriptGenerator') {
    dependencies {
        compile project(":factory")
        testCompile project(":testfactories")
    }

    task installAngular(type: Exec) {
        workingDir "$projectDir/src/test/ts/"

        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            commandLine "npm.cmd", "install"
        } else {
            commandLine "npm", "install"
        }
    }

    task typescriptTest(type: Exec) {
        dependsOn ':typescriptGenerator:installAngular'
        workingDir "$projectDir/src/test/ts/"

        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            commandLine "npm.cmd", "test"
        } else {
            commandLine "npm", "test"
        }
    }
}

//idea bug https://youtrack.jetbrains.com/issue/IDEA-192658

project(':soapFactory') {

    repositories {
        mavenCentral()

        maven {
            url "http://maven.java.net/content/repositories/snapshots"
        }
    }

    dependencies {

        compile project(":factory")
        compile project(":jettyFactory")

        compile (group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.14.v20181114')  {
            exclude group: "javax.annotation"
        }


        compile (group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.4.0-b180830.0438') {
            exclude group: 'javax.annotation'
            exclude group: 'javax.activation'
        }

        compile (group: 'com.sun.istack', name: 'istack-commons-runtime', version: '3.0.7') {
            exclude group: 'javax.annotation'
        }

        compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.4.0-b180830.0438'

        compile (group: 'com.sun.xml.messaging.saaj', name: 'saaj-impl', version: '1.5.0') {
            exclude group: 'javax.annotation'
            exclude group: 'org.jvnet.mimepull'
            exclude group: 'javax.activation'
            exclude group: 'javax.xml.soap'
        }

        compile (group: 'javax.xml.ws', name: 'jaxws-api', version: '2.4.1-SNAPSHOT') {
            exclude group: 'javax.annotation'
            exclude group: 'javax.xml.soap'
        }


        compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

        compile group: 'javax.xml.soap', name: 'javax.xml.soap-api', version: '1.4.0'

//        compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
        compile (group: 'javax.jws', name: 'javax.jws-api', version: '1.1') {
            exclude group: 'javax.annotation'
//            exclude group: 'javax.xml.soap'
        }


    }
}
