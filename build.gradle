



apply plugin: 'idea'
idea {
    project {
        languageLevel = '1.8'
        vcs = 'Git'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'findbugs'
	
    repositories {
        mavenCentral()
    }
	
	sourceCompatibility = 1.8

    dependencies {
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
        compile group: 'com.google.guava', name: 'guava', version: '19.0'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    findbugs {
        sourceSets = [sourceSets.main]
        toolVersion = "3.0.1"
        ignoreFailures = true
        excludeFilter = file("$rootProject.projectDir/findbugs/findbugs-exclude-filter.xml")
    }

    apply plugin: 'maven-publish'

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    publishing {

        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourceJar {
                    classifier "sources"
                }
            }
        }

        repositories {
            maven {
                // change to point to your repo, e.g. http://my.org/repo
                credentials {
                    username System.getProperty("repouser")
                    password System.getProperty("repopassword")
                }
                url System.getProperty("repourl")
            }
        }
    }

    group = 'de.scoopsoftware.factoryfx'
    version = '0.1'


}



project(':server') {
  dependencies {
        compile project(":factory")
    }
}

project(':adminUiJavafxServer') {
    dependencies {
        compile project(":server")
        compile project(":restutil")
        compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.3.8.v20160314'
        compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.3.8.v20160314'
        compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.3.8.v20160314'
        compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.23'
        compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.8.1'
        compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.23'
    }
}

project(':adminUiJavafxClient') {

    dependencies {
        compile 'com.googlecode.java-diff-utils:diffutils:1.3.0'
        compile 'org.fxmisc.richtext:richtextfx:0.6.7'
        compile 'org.controlsfx:controlsfx:8.40.9'
        compile project(":factory")
    }

}

project(':data') {
    dependencies {
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.1'
        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.8.1'
        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk7', version: '2.6.7'
        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.8.1'
    }
}

project(':factory') {
    dependencies {
        compile project(":data")
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.1'
        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.8.1'
        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk7', version: '2.6.7'
        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.8.1'
    }
}



project(':adminUiAngularjs') {

    dependencies {
        compile 'com.google.javascript:closure-compiler:v20160315'
        compile 'org.jsoup:jsoup:1.8.3'

        compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.3.8.v20160314'
        compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.3.8.v20160314'
        compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.3.8.v20160314'
        compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.23'
        compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.8.1'
        compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.23'

        compile 'com.googlecode.java-diff-utils:diffutils:1.3.0'

        compile project(":restutil")
        compile project(":server")
        testCompile project(":development")
        testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    }

}

project(':development') {

    dependencies {
        compile project(":factory")
        compile project(":server")
    }

}


project(':restutil') {

    dependencies {
        compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.23'
    }

}


project(':example') {

    dependencies {
        compile project(":adminUiAngularjs")
        compile project(":factory")
        compile project(":development")
        compile project(":server")
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    }

}


project(':javafxDataEditing') {

    dependencies {
        compile project(":factory")
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
        compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.12'
        compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.6.10'
        compile 'com.googlecode.java-diff-utils:diffutils:1.3.0'
    }

}



project(':javafxDistribution') {

    dependencies {
        compile project(":restutil")
        compile 'com.google.guava:guava:18.0'
        compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.23.2'
        compile 'org.glassfish.jersey.core:jersey-client:2.23.2'

        compile 'org.slf4j:slf4j-api:1.7.12'

        compile 'org.eclipse.jetty:jetty-server:9.3.9.v20160517'
        compile 'org.eclipse.jetty:jetty-webapp:9.3.9.v20160517'
        compile 'org.eclipse.jetty:jetty-servlets:9.3.9.v20160517'

        compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.23.2'

    }

}

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.7.0'
    }

    repositories {
        mavenCentral()
    }
}
project(':javafxDistributionExample') {
    apply plugin: 'javafx-gradle-plugin'

    dependencies {
        compile project(":development")
        compile project(":javafxDistribution")
    }

    jfx {
        verbose = true
        mainClass = "de.factoryfx.javafx.distribution.ExampleDistributionApp"
        jfxAppOutputDir = "build/jfx/app"
        jfxMainAppJarName = "project-jfx.jar"
        deployDir = "src/main/deploy"
        useEnvironmentRelativeExecutables = true

        // gradle jfxJar
        css2bin = false
        preLoader = null // String
        updateExistingJar = false
        allPermissions = false
        manifestAttributes = null // Map<String, String>
        addPackagerJar = true
        copyAdditionalAppResourcesToJar = false

        // gradle jfxNative
        identifier = null  // String - setting this for windows-bundlers makes it possible to generate upgradeable installers (using same GUID)
        vendor = "some serious business corp."
        nativeOutputDir = "build/jfx/native"
        bundler = "ALL" // set this to some specific, if your don't want all bundlers running, examples "windows.app", "jnlp", ...
        jvmProperties = null // Map<String, String>
        jvmArgs = null // List<String>
        userJvmArgs = null // Map<String, String>
        launcherArguments = null // List<String>
        nativeReleaseVersion = "1.0"
        needShortcut = false
        needMenu = false
//        bundleArguments = [
//                // dont bundle JRE (not recommended, but increases build-size/-speed)
//                runtime: null
//        ]
        appName = "project" // this is used for files below "src/main/deploy", e.g. "src/main/deploy/windows/project.ico"
        additionalBundlerResources = null // path to some additional resources for the bundlers when creating application-bundle
        additionalAppResources = null // path to some additional resources when creating application-bundle
//        secondaryLaunchers = [[appName:"somethingDifferent"], [appName:"somethingDifferent2"]]
        fileAssociations = null // List<Map<String, Object>>
        noBlobSigning = false // when using bundler "jnlp", you can choose to NOT use blob signing
        customBundlers = null // List<String>
        skipNativeLauncherWorkaround205 = false

        skipNativeLauncherWorkaround124 = false
        skipNativeLauncherWorkaround167 = false
        skipJNLPRessourcePathWorkaround182 = false
        skipSigningJarFilesJNLP185 = false
        skipSizeRecalculationForJNLP185 = false

        // gradle jfxRun
        runJavaParameter = null // String
        runAppParameter = null // String

        // per default the outcome of the gradle "jarTask" will be used, set this to specify otherwise (like proguard-output)
        alternativePathToJarFile = null // String

        // to disable patching of ant-javafx.jar, set this to false
        usePatchedJFXAntLib = true

        // making it able to support absolute paths, defaults to "false" for maintaining old behaviour
        checkForAbsolutePaths = false

        // gradle jfxGenerateKeyStore
        keyStore = "src/main/deploy/keystore.jks"
        keyStoreAlias = "myalias"
        keyStorePassword = "password"
        keyPassword = null // will default to keyStorePassword
        keyStoreType = "jks"
        overwriteKeyStore = false

        certDomain = null // required
        certOrgUnit = null // defaults to "none"
        certOrg = null // required
        certState = null // required
        certCountry = null // required
    }

}